name: CI

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

jobs:
  if_merged:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Build and push"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - env:
          MONGO_URL: ${{ secrets.MONGO_URL }}
          AMQP_HOST: ${{ secrets.AMQP_HOST }}
          AMQP_PORT: ${{ secrets.AMQP_PORT }}
          AMQP_TLS: ${{ secrets.AMQP_TLS }}
          AMQP_USER: ${{ secrets.AMQP_USER }}
          AMQP_PASSWORD: ${{ secrets.AMQP_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_TLS: ${{ secrets.REDIS_TLS }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
          TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
          TWILIO_TWIML_APP_SID: ${{ secrets.TWILIO_TWIML_APP_SID }}
          TWILIO_ALLOW_INCOMING_CALLS: ${{ secrets.TWILIO_ALLOW_INCOMING_CALLS }}
          FROM_NUMBER: ${{ secrets.FROM_NUMBER }}
          AGENT_ID: ${{ secrets.AGENT_ID }}
          USER_CONTROLL: ${{ secrets.USER_CONTROLL }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/ignai-callcenter-server:latest --build-arg ARG_MONGO_URL="$MONGO_URL" --build-arg ARG_AMQP_HOST="$AMQP_HOST" --build-arg ARG_AMQP_PORT="$AMQP_PORT" --build-arg ARG_AMQP_TLS="$AMQP_TLS" --build-arg ARG_AMQP_USER="$AMQP_USER" --build-arg ARG_AMQP_PASSWORD="$AMQP_PASSWORD" --build-arg ARG_REDIS_HOST="$REDIS_HOST" --build-arg ARG_REDIS_PORT="$REDIS_PORT" --build-arg ARG_REDIS_PASSWORD="$REDIS_PASSWORD" --build-arg ARG_REDIS_TLS="$REDIS_TLS" --build-arg ARG_TWILIO_ACCOUNT_SID="$TWILIO_ACCOUNT_SID" --build-arg ARG_TWILIO_AUTH_TOKEN="$TWILIO_AUTH_TOKEN" --build-arg ARG_TWILIO_API_KEY="$TWILIO_API_KEY" --build-arg ARG_TWILIO_API_SECRET="$TWILIO_API_SECRET" --build-arg ARG_TWILIO_TWIML_APP_SID="$TWILIO_TWIML_APP_SID" --build-arg ARG_TWILIO_ALLOW_INCOMING_CALLS="$TWILIO_ALLOW_INCOMING_CALLS" --build-arg ARG_FROM_NUMBER="$FROM_NUMBER" --build-arg ARG_AGENT_ID="$AGENT_ID" --build-arg ARG_USER_CONTROLL="$USER_CONTROLL" --build-arg ARG_EMAIL_HOST="$EMAIL_HOST" --build-arg ARG_EMAIL_PORT="$EMAIL_PORT" --build-arg ARG_EMAIL_USERNAME="$EMAIL_USERNAME" --build-arg ARG_EMAIL_PASSWORD="$EMAIL_PASSWORD"
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/ignai-callcenter-server:latest

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        with:
          app-name: "ignai-callcenter-server"
          images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/ignai-callcenter-server:latest
          restart: true
